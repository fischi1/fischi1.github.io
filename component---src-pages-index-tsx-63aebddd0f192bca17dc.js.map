{"version":3,"sources":["webpack:///./src/components/indexProjectSection/ProjectContainer.tsx","webpack:///./src/components/button/ButtonLink.tsx","webpack:///./src/components/indexProjectSection/ProjectDivider.tsx","webpack:///./src/components/indexProjectSection/ProjectDetail.tsx","webpack:///./src/components/indexProjectSection/ProjectSection.tsx","webpack:///./src/components/landing/LandingContentAnimatedText.tsx","webpack:///./src/components/landing/LandingContentIndex.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/components/portrait/Portrait.tsx","webpack:///./src/pages/index.tsx"],"names":["ProjectContainer","children","className","ButtonLink","external","to","buttonClassName","clsx","ExternalLink","href","ProjectDivider","ProjectDetail","title","short","demo","noun","slug","thumbnailFluidImage","thumbnailRaw","flipped","last","AspectRatioDiv","ratio","fluid","alt","src","width","height","style","objectFit","ProjectSection","projects","useStaticQuery","allMarkdownRemark","nodes","sort","a","b","numA","frontmatter","order","numB","map","proj","i","thumbnail","childImageSharp","thumnailRaw","publicURL","key","fields","length","phrases","LandingContentAnimatedText","props","ref","useRef","useState","index","setIndex","myIterationCounter","useEffect","myfunc","current","classList","remove","offsetWidth","add","addEventListener","removeEventListener","LandingContentIndex","obj","TypeError","id","Portrait","data","portrait","query","IndexPage","aboutMeAst","file","childMarkdownRemark","htmlAst","Layout","SEO","Landing","fullHeight","Container","SectionHeading","headingClassName","projectAstCompiler"],"mappings":"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","file":"component---src-pages-index-tsx-63aebddd0f192bca17dc.js","sourcesContent":["import React, { FC } from \"react\"\r\nimport \"./ProjectContainer.scss\"\r\n\r\ntype Props = {}\r\n\r\nconst ProjectContainer: FC<Props> = ({ children }) => {\r\n    return (\r\n        <div className=\"project-container d-flex flex-row justify-content-center\">\r\n            <div>{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectContainer\r\n","import clsx from \"clsx\"\r\nimport { Link } from \"gatsby\"\r\nimport React, { FC } from \"react\"\r\nimport ExternalLink from \"../externalLink/ExternalLink\"\r\nimport \"./Button.scss\"\r\n\r\ntype Props = {\r\n    className?: string\r\n    to: string\r\n    external?: boolean\r\n}\r\n\r\nconst ButtonLink: FC<Props> = ({ className, external, to, children }) => {\r\n    const buttonClassName = clsx(\"btn btn-primary btn-gradient\", className)\r\n\r\n    if (external)\r\n        return (\r\n            <ExternalLink className={buttonClassName} href={to}>\r\n                {children}\r\n            </ExternalLink>\r\n        )\r\n\r\n    return (\r\n        <Link className={buttonClassName} to={to}>\r\n            {children}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ButtonLink\r\n","import React, { FC } from \"react\"\r\nimport \"./ProjectDivider.scss\"\r\nimport clsx from \"clsx\"\r\n\r\ntype Props = {\r\n    className?: string\r\n}\r\n\r\nconst ProjectDivider: FC<Props> = ({ className }) => {\r\n    return <div className={clsx(\"project-divider\", className)} />\r\n}\r\n\r\nexport default ProjectDivider\r\n","import clsx from \"clsx\"\r\nimport { Link } from \"gatsby\"\r\nimport GatsbyImage, { FluidObject } from \"gatsby-image\"\r\nimport React, { FC } from \"react\"\r\nimport AspectRatioDiv from \"../aspectRationDiv/AspectRatioDiv\"\r\nimport ButtonLink from \"../button/ButtonLink\"\r\nimport \"./ProjectDetail.scss\"\r\nimport ProjectDivider from \"./ProjectDivider\"\r\n\r\ntype Props = {\r\n    title: string\r\n    short: string\r\n    demo?: string | null\r\n    noun?: string\r\n    slug: string\r\n    thumbnailFluidImage?: FluidObject\r\n    thumbnailRaw?: string\r\n    flipped?: boolean\r\n    last?: boolean\r\n}\r\n\r\nconst ProjectDetail: FC<Props> = ({\r\n    title,\r\n    short,\r\n    demo,\r\n    noun,\r\n    slug,\r\n    thumbnailFluidImage,\r\n    thumbnailRaw,\r\n    flipped,\r\n    last\r\n}) => (\r\n    <>\r\n        <div\r\n            className={clsx(\r\n                \"project-detail my-3 d-flex flex-column flex-md-row\",\r\n                {\r\n                    \"flex-md-row-reverse\": flipped\r\n                }\r\n            )}\r\n        >\r\n            <div className=\"project-image\">\r\n                <Link to={slug}>\r\n                    <AspectRatioDiv ratio={2 / 3}>\r\n                        {thumbnailFluidImage && (\r\n                            <GatsbyImage\r\n                                fluid={thumbnailFluidImage}\r\n                                alt={title}\r\n                            />\r\n                        )}\r\n                        {thumbnailRaw && (\r\n                            <img\r\n                                src={thumbnailRaw}\r\n                                alt={title}\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                style={{ objectFit: \"cover\" }}\r\n                            />\r\n                        )}\r\n                    </AspectRatioDiv>\r\n                </Link>\r\n            </div>\r\n            <div className=\"project-spacer\">&nbsp;</div>\r\n            <div\r\n                className={clsx(\r\n                    \"project-content d-flex align-items-center text-center text-md-left\",\r\n                    { \"text-md-right flex-row-reverse\": flipped }\r\n                )}\r\n            >\r\n                <div className=\"w-100\">\r\n                    <h2 className=\"h3\">{title}</h2>\r\n                    <p className=\"mb-2 mb-md-5\">{short}</p>\r\n                    <div>\r\n                        {demo && (\r\n                            <ButtonLink external className=\"mr-3\" to={demo}>\r\n                                Go to {noun}\r\n                            </ButtonLink>\r\n                        )}\r\n                        <ButtonLink to={slug}>More ...</ButtonLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {!last && (\r\n            <div className=\"text-center\">\r\n                <ProjectDivider className=\"my-5\" />\r\n            </div>\r\n        )}\r\n    </>\r\n)\r\n\r\nexport default ProjectDetail\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\nimport { FluidObject } from \"gatsby-image\"\r\nimport React, { FC } from \"react\"\r\nimport { ProjectSectionQuery } from \"../../../types/graphql-types\"\r\nimport ProjectContainer from \"./ProjectContainer\"\r\nimport ProjectDetail from \"./ProjectDetail\"\r\n\r\ntype Props = {}\r\n\r\nconst ProjectSection: FC<Props> = () => {\r\n    const data = useStaticQuery(graphql`\r\n        query ProjectSection {\r\n            allMarkdownRemark(\r\n                filter: {\r\n                    fileAbsolutePath: { glob: \"**/data/projects/**/*.md\" }\r\n                }\r\n            ) {\r\n                nodes {\r\n                    frontmatter {\r\n                        title\r\n                        short\r\n                        demo\r\n                        noun\r\n                        order\r\n                        thumbnail {\r\n                            childImageSharp {\r\n                                fluid(\r\n                                    maxWidth: 510\r\n                                    maxHeight: 340\r\n                                    quality: 90\r\n                                    base64Width: 50\r\n                                    cropFocus: CENTER\r\n                                ) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                }\r\n                            }\r\n                            publicURL\r\n                        }\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `) as ProjectSectionQuery\r\n\r\n    const projects = data.allMarkdownRemark.nodes.sort((a, b) => {\r\n        const numA = a.frontmatter?.order ?? 99999\r\n        const numB = b.frontmatter?.order ?? 99999\r\n\r\n        if (numA < numB) return -1\r\n        if (numA > numB) return 1\r\n        return 0\r\n    })\r\n\r\n    return (\r\n        <ProjectContainer>\r\n            {projects.map((proj, i) => {\r\n                const thumbnailFluidImage = proj.frontmatter?.thumbnail\r\n                    ?.childImageSharp?.fluid as FluidObject | undefined\r\n\r\n                /**\r\n                 * Falling back to `publicURL` if the FluidImage isn't available.\r\n                 * This is done so that a gif/avif thumbnail also works\r\n                 */\r\n                const thumnailRaw = !thumbnailFluidImage\r\n                    ? proj.frontmatter?.thumbnail?.publicURL!\r\n                    : \"\"\r\n\r\n                return (\r\n                    <ProjectDetail\r\n                        key={proj.fields?.slug ?? \"Slug missing\"}\r\n                        title={proj.frontmatter?.title ?? \"Title missing\"}\r\n                        short={proj.frontmatter?.short ?? \"Short missing\"}\r\n                        slug={proj.fields?.slug ?? \"Slug missing\"}\r\n                        demo={proj.frontmatter?.demo}\r\n                        noun={proj.frontmatter?.noun ?? \"Noun missing\"}\r\n                        thumbnailFluidImage={thumbnailFluidImage}\r\n                        thumbnailRaw={thumnailRaw}\r\n                        flipped={i % 2 === 1}\r\n                        last={i === projects.length - 1}\r\n                    />\r\n                )\r\n            })}\r\n        </ProjectContainer>\r\n    )\r\n}\r\n\r\nexport default ProjectSection\r\n","import React, { FC, useEffect, useRef, useState } from \"react\"\r\nimport \"./LandingContentAnimatedText.scss\"\r\n\r\ntype Props = {}\r\n\r\nconst phrases = [\r\n    \"developing experiences\",\r\n    \"making stuff work\",\r\n    \"solving problems\",\r\n    \"learning new things\"\r\n]\r\n\r\nconst LandingContentAnimatedText: FC<Props> = props => {\r\n    const ref = useRef<HTMLDivElement>(null)\r\n\r\n    const [index, setIndex] = useState(0)\r\n\r\n    const myIterationCounter = useRef(0)\r\n\r\n    useEffect(() => {\r\n        const myfunc = () => {\r\n            myIterationCounter.current++\r\n\r\n            if (myIterationCounter.current % 2 == 0) {\r\n                if (ref.current) {\r\n                    ref.current.classList.remove(\"animated\")\r\n                    void ref.current.offsetWidth\r\n                    ref.current.classList.add(\"animated\")\r\n                    setIndex(index + 1)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ref.current) {\r\n            ref.current.addEventListener(\"animationend\", myfunc, false)\r\n        }\r\n\r\n        return () => {\r\n            if (ref.current) {\r\n                ref.current.removeEventListener(\"animationend\", myfunc, false)\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div\r\n            className=\"landing-hightlighted-container animated d-inline-block\"\r\n            ref={ref}\r\n        >\r\n            <div className=\"landing-highlighted\">\r\n                {phrases[(index + 1) % phrases.length]}\r\n            </div>\r\n            <div className=\"landing-highlighted\">\r\n                {phrases[index % phrases.length]}\r\n            </div>\r\n            <div className=\"spacing-div\">{phrases[0]}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingContentAnimatedText\r\n","import React, { FC } from \"react\"\r\nimport LandingContentAnimatedText from \"./LandingContentAnimatedText\"\r\nimport \"./LandingContentIndex.scss\"\r\n\r\ntype Props = {}\r\n\r\nconst LandingContentIndex: FC<Props> = ({}) => (\r\n    <div id=\"landing-content-index\">\r\n        <div id=\"landing-text\">\r\n            <h1>\r\n                <span className=\"text-nowrap\">I enjoy</span>\r\n                <br />\r\n                <LandingContentAnimatedText />\r\n            </h1>\r\n        </div>\r\n        <div\r\n            id=\"landing-subtext\"\r\n            className=\"d-flex flex-column flex-sm-row justify-content-center\"\r\n        >\r\n            <div className=\"lead-container\">\r\n                <p className=\"lead px-0\">\r\n                    Web\r\n                    <br />\r\n                    App development\r\n                </p>\r\n            </div>\r\n            <div id=\"separator\">&nbsp;</div>\r\n            <div className=\"lead-container\">\r\n                <p className=\"lead text-right text-sm-left px-0\">\r\n                    Front- & Backend\r\n                    <br />\r\n                    Games\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default LandingContentIndex\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import { graphql, useStaticQuery } from \"gatsby\"\r\nimport GatsbyImage from \"gatsby-image\"\r\nimport React, { FC } from \"react\"\r\nimport \"./Portrait.scss\"\r\n\r\ntype Props = {}\r\n\r\nconst Portrait: FC<Props> = () => {\r\n    const data = useStaticQuery(graphql`\r\n        query {\r\n            portrait: file(relativePath: { eq: \"images/fischi.png\" }) {\r\n                childImageSharp {\r\n                    fluid(maxWidth: 500, quality: 85, base64Width: 50) {\r\n                        ...GatsbyImageSharpFluid_withWebp\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n\r\n    return (\r\n        <div className=\"portrait-component mr-0 mr-md-4 mb-3 mb-md-0\">\r\n            <GatsbyImage fluid={data.portrait.childImageSharp.fluid} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Portrait\r\n","import { graphql, PageProps } from \"gatsby\"\r\nimport React, { FC } from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { IndexQuery } from \"../../types/graphql-types\"\r\nimport ProjectSection from \"../components/indexProjectSection/ProjectSection\"\r\nimport Landing from \"../components/landing/Landing\"\r\nimport LandingContentIndex from \"../components/landing/LandingContentIndex\"\r\nimport Layout from \"../components/layout/Layout\"\r\nimport Portrait from \"../components/portrait/Portrait\"\r\nimport SectionHeading from \"../components/sectionHeading/SectionHeading\"\r\nimport SEO from \"../components/seo/SEO\"\r\nimport projectAstCompiler from \"../functions/projectAstCompiler\"\r\n\r\nconst IndexPage: FC<PageProps<IndexQuery>> = ({ data }) => {\r\n    const aboutMeAst = data.file?.childMarkdownRemark?.htmlAst\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Lukas Fischer\" />\r\n            <Landing fullHeight>\r\n                <LandingContentIndex />\r\n            </Landing>\r\n            <Container>\r\n                <SectionHeading headingClassName=\"h1\">About me</SectionHeading>\r\n\r\n                <Portrait />\r\n\r\n                {projectAstCompiler(aboutMeAst)}\r\n\r\n                <div className=\"clearfix\">&nbsp;</div>\r\n\r\n                <SectionHeading headingClassName=\"h1\">Projects</SectionHeading>\r\n\r\n                <ProjectSection />\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst query = graphql`\r\n    query Index {\r\n        file(relativePath: { eq: \"data/about-me.md\" }) {\r\n            childMarkdownRemark {\r\n                htmlAst\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default IndexPage\r\n\r\nexport { query }\r\n"],"sourceRoot":""}